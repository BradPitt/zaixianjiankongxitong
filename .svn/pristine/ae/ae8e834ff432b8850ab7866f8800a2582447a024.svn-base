function setValue(){
    var id = GetQueryString("id");
    $.ajax({
        type: "POST",
        dataType: "JSON",
        url: "/Api/System/GetSSSJ?deviceCode="+id ,
        success: function (result) {
            var data =  eval('(' + result + ')');
            if (!data) {
                data = [];
            }
            // 设备名称
            $("#deviceName").html(data.DEVICEROW[0].DEVICENAME);
            // 观测时间
            $("#guanceshijian").html(data.COLOGY.DATETIME);
            setEcology(data.COLOGY);
            setBaoJingXianShi(data.STATUS);
            setLDT(data);
            setBoLang(data.BoLang);
            setQiWenQiYa(data.QiWenQiYa);
            setQiXiang(data.QiWenQiYa);
            setHaiLiu(data.HaiLiu);
            setFXFS(data.FengSuFengXiang);
        }
    });
}

function setEcology(data) {
    var delCol = "DEVICECODE,DATETIME,COLOGYPOINTLIST,SENDNUM,RECVNUM,RESERV0,RESERV1,RESERV2,RESERV3,RESERV4,RESERV5,RESERV6,RESERV7,RESERV8,RESERV9"
    + ",RESERV10,RESERV11,RESERV12,RESERV13,RESERV14,RESERV15,RESERV16,RESERV17,RESERV18,RESERV19";
    $("#ecology").html("");
    for (var Key in data) {
        if (delCol.indexOf(Key) == -1) {
            var sli;
            if ("CURRENTTEM" == Key) {
                sli = "<li><span>" + data[Key].toFixed(3) + "</span><span>" + "海浪水温" + "</span></li>";
                $("#ecology").append(sli);
            }
            else if ("WATERTEM" == Key) {
                sli = "<li><span>" + data[Key].toFixed(3) + "</span><span>" + "独立水温" + "</span></li>";
                $("#ecology").append(sli);
            } else {
                sli = "<li><span>" + data[Key].toFixed(3) + "</span><span>" + Key + "</span></li>";
                $("#ecology").append(sli);
            }
        }
    }
}

function setBaoJingXianShi(data) {
   
    $("#bjtsUl").html("");
    var sli;
    sli = "<li><span>经度：</span>" + data.LON + "</li>"
        + "<li><span>纬度：</span>" + data.LAT + "</li>";
    $("#bjtsUl").append(sli);
    if (data.GPSALARM == 1) {
        sli = "<li><span>GPS报警：</span><img src='/img/icon_green.png'  alt='' /></li>"
    } else if (data.GPSALARM == 2) {
        sli = "<li><span>GPS报警：</span><img src='/img/icon_red.png'  alt='' /></li>"
    } else  {
        sli = "<li><span>GPS报警：</span>--</li>"
    }
    $("#bjtsUl").append(sli);

    if (data.ANCHOR == 1) {
        sli = "<li><span>锚灯：</span><img src='/img/icon_green.png'  alt='' /></li>"
    } else if (data.ANCHOR == 2) {
        sli = "<li><span>锚灯：</span><img src='/img/icon_red.png'  alt='' /></li>"
    } else {
        sli = "<li><span>锚灯：</span>--</li>"
    }
    $("#bjtsUl").append(sli);

    if (data.WATERALARM == 1) {
        sli = "<li><span>水警：</span><img src='/img/icon_green.png'  alt='' /></li>"
    } else if (data.WATERALARM == 2) {
        sli = "<li><span>水警：</span><img src='/img/icon_red.png'  alt='' /></li>"
    } else {
        sli = "<li><span>水警：</span>--</li>"
    }
    $("#bjtsUl").append(sli);
        
    if (data.DOORALARM == 1) {
        sli = "<li><span>门警：</span><img src='/img/icon_green.png'  alt='' /></li>"
    } else if (data.DOORALARM == 2) {
        sli = "<li><span>门警：</span><img src='/img/icon_red.png'  alt='' /></li>"
    } else {
        sli = "<li><span>门警：</span>--</li>"
    }
    $("#bjtsUl").append(sli);
       
    sli = "<li><span>电压：</span>" + data.VOLTAGE + "</li><li><span>内存：</span>" + data.FREEMEMO + "</li>";
    $("#bjtsUl").append(sli);

    if (data.SENSERSTATUS == 1) {
        sli = "<li><span>传感器状态：</span><img src='/img/icon_green.png'  alt='' /></li>"
    } else if (data.SENSERSTATUS == 2) {
        sli = "<li><span>传感器状态：</span><img src='/img/icon_red.png'  alt='' /></li>"
    } else {
        sli = "<li><span>传感器状态：</span>--</li>"
    }
    $("#bjtsUl").append(sli);
       
    if (data.BUOYSTATUS == 1) {
        sli = "<li><span>浮标状态：</span><img src='/img/icon_green.png'  alt='' /></li>"
    } else if (data.BUOYSTATUS == 2) {
        sli = "<li><span>浮标状态：</span><img src='/img/icon_red.png'  alt='' /></li>"
    } else if (data.BUOYSTATUS == 3) {
        sli = "<li><span>浮标状态：</span><img src='/img/icon_yellow.png'  alt='' /></li>"
    } else {
        sli = "<li><span>浮标状态：</span>--</li>"
    }
    $("#bjtsUl").append(sli);
 
}
function setLDT(data) {// 雷达图
    var lat_o, lon_o, lat, lon;
    lat_o = data.DEVICEROW[0].ELAT;
    lon_o = data.DEVICEROW[0].ELON;
    lat = data.STATUS.LAT;
    lon = data.STATUS.LON;
    var dis = GetDistance(lat_o, lon_o, lat, lon);
    var myChart = echarts.init(document.getElementById('leidatu'));
    option = {
        tooltip: {
            trigger: 'axis'
        },
        polar: [
           {
               indicator: [
                   { text: '偏离距离', max: 1000 }
               ],
               center: ['50%', '50%'],
               radius: 90,
               startAngle: 160,
               splitNumber: 4,
               name: {
                   show: false,
                   formatter: '{value}',
                   textStyle: { color: 'red' },

               },
               scale: true,
               type: 'circle',
               axisLine: {            // 坐标轴线
                   show: true,        // 默认显示，属性show控制显示与否
                   lineStyle: {       // 属性lineStyle控制线条样式
                       color: '#82b3de',
                       width: 2,
                       type: 'solid'
                   }
               },
               axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel
                   show: true,
                   // formatter: null,
                   textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                       color: '#000'
                   }
               },
               splitArea: {
                   show: true,
                   areaStyle: {
                       color: ['rgba(13,146,239,1)', 'rgba(53,165,241,1)', 'rgba(125,194,247,1)', 'rgba(205,232,253,9)']
                   }
               },
               splitLine: {
                   show: true,
                   lineStyle: {
                       width: 2,
                       color: ['rgba(245,245,245,1)', 'rgba(255,255,255,1)', 'rgba(255,255,255,0.9)', 'rgba(255,255,255,0.5)', 'rgba(225,225,225,0.7)']
                   }
               }
           }
        ],
        calculable: true,
        series: [
            {
                name: '偏离距离',
                type: 'radar',
                data: [
                    {
                        //symbol: 'image://../img/ok_fb3.png', 
                        symbol: 'emptyCircle',
                        symbolSize: 8,
                        value: [dis],
                        name: '偏离距离'
                    }
                ]
            }
        ]
    };
    myChart.setOption(option);
}
function setBoLang(data) {
    var sli = "";
    $("#blUl").html("");
    sli = "<li>&nbsp;</li><li>波高（m）</li><li>波周期（s）</li>"
        + "<li>最大</li><li>" + data.MAXWAVEHIGH.toFixed(3) + "</li>" + "<li>" + data.MAXWAVEPIOD.toFixed(3) + "</li>"
        + "<li>1/10</li><li>" + data.TENTHWAVEHIGH.toFixed(3) + "</li>" + "<li>" + data.TENTHWAVEPIOD.toFixed(3) + "</li>"
        + "<li>平均</li><li>" + data.AVEWAVEHIGH.toFixed(3) + "</li>" + "<li>" + data.AVEWAVEPIOD.toFixed(3) + "</li>"
        + "<li>有效</li><li>" + data.WALIDWAVEHIGH.toFixed(3) + "</li>" + "<li>" + data.WALIDWAVEPIOD.toFixed(3) + "</li>";
    $("#blUl").append(sli);
    $("#WAVEDIR").html(data.WAVEDIR);
    setBXT(data.WAVEDIR);
}
function setBXT(WAVEDIR) {
    // 波向图
    var myChart = echarts.init(document.getElementById('boxiangtu'));
    option = {
        backgroundColor: 'rgba(0,0,0,0)',
        // backgroundImage: '#1b1b1b',
        tooltip: {
            show: false,
            formatter: "{a}  : {c}°"
        },
        series: [
            {
                name: '波向',
                type: 'gauge',
                // center: ['50%', '40%'],    // 默认全局居中
                //radius: '58%',
                startAngle: 90,
                endAngle: -269.999,
                max: 360,
                detail: {
                    show: false,
                    formatter: '90'
                }, //仪表盘显示数据
                axisLine: { //仪表盘轴线样式
                    show: false,
                    lineStyle: {
                        width: 6,
                        show: false
                    }
                },
                splitNumber: 4,       // 分割段数，默认为5
                splitLine: {           // 分隔线
                    show: true,        // 默认显示，属性show控制显示与否,这里设为false将隐藏分割线！！
                    length: 12,         // 属性length控制线长
                    lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式
                        color: '#f02d00',
                        width: 0,
                        type: 'solid'
                    }
                },
                axisLine: {            // 坐标轴线
                    lineStyle: {       // 属性lineStyle控制线条样式
                        color: [[1, '#f02d00']],
                        width: 0
                    }
                },
                axisTick: {            // 坐标轴小标记
                    show: false,        // 属性show控制显示与否，默认不显示
                    splitNumber: 5,    // 每份split细分多少段
                    length: 8,         // 属性length控制线长
                    lineStyle: {       // 属性lineStyle控制线条样式
                        color: '#ffbd2c',
                        width: 1,
                        type: 'solid'
                    }
                },
                axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel
                    show: false,
                    formatter: function (v) {
                        switch (v + '') {
                            case '0': return '北';
                            case '90': return '东';
                            case '180': return '南';
                            case '270': return '西';
                            default: return '';
                        }
                    },
                    distance: -26,
                    textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                        // color: '#333'
                    }
                },
                pointer: {
                    length: '70%',
                    width: 4,
                    color: 'auto'
                },
                data: [{ value: WAVEDIR, name: '' }]
            }
        ]
    };

    myChart.setOption(option);
}
function setQiWenQiYa(data) {
    var sli = "";
    $("#qwqyUl").html("");
    sli = "<li>&nbsp;</li><li>平均</li><li>最大</li><li>最小</li><li>最大出现时刻</li><li>最小出现时刻</li>"
        + "<li>气温</li><li>" + data.AIRTEM.toFixed(3) + "</li><li>" + data.MAXAIRTEM.toFixed(3) + "</li><li>" + data.MINAIRTEM.toFixed(3) + "</li><li>" + data.MAXAIRTEMTIME + "</li><li>" + data.MINAIRTEMTIME + "</li>"
        + "<li>气压</li><li>" + data.PRESSURE.toFixed(3) + "</li><li>" + data.MAXPRESSURE.toFixed(3) + "</li><li>" + data.MINPRESSURE.toFixed(3) + "</li><li>" + data.MAXPRESSURETIME + "</li><li>" + data.MINPRESSURETIME + "</li>"
        + "<li>湿度</li><li>" + data.HUMI.toFixed(1) + "</li><li>" + data.MAXHUMI.toFixed(1) + "</li><li>" + data.MINHUMI.toFixed(1) + "</li><li>" + data.MAXHUMITIME + "</li><li>" + data.MINHUMITIME + "</li>";
    $("#qwqyUl").append(sli);
}
function setQiXiang(data) {
    var sli = "";
    $("#qxUl").html("");
    sli = "<li>能见度：" + data.NJD + "</li><li>实际雨量：" + data.RAINFALLACTUAL + "</li><li>测前雨量：" + data.RAINFALLPREV + "</li><li>雨量：" + data.RAINFALL + "</li>"
        + " <li>总辐射：" + data.TOTALRADIATION + "</li><li>红外辐射：" + data.INFRAREDRADIATION + "</li><li>日照时间：" + data.SUNLIGHTTIME + "</li><li>二氧化碳：" + data.AIRCO2 + "</li>";
       
    $("#qxUl").append(sli);                       
}
function setHaiLiu(data) {
    var sli = '';
      //<option value="全部">全部</option>
    
    $("#hlUl").html("");
    for (var Key in data) {
        
    }
    var opt = '<li>层数：<select id="haiquSel" class="selInput"><option value="1">1层</option><option value="2">2层</option><option value="3">3层</option><option value="4">4层</option>'
     + '<option value="5">5层</option><option value="6">6层</option><option value="7">7层</option><option value="8">8层</option>'
     + '<option value="9">9层</option><option value="10">10层</option><option value="11">11层</option><option value="12">12层</option>'
     + '<option value="13">13层</option><option value="14">14层</option><option value="15">15层</option><option value="16">16层</option>'
     + '<option value="17">17层</option><option value="18">18层</option><option value="19">19层</option><option value="20">20层</option>'
     + '<option value="21">21层</option><option value="22">22层</option><option value="23">23层</option><option value="24">24层</option>'
     + '<option value="25">25层</option><option value="26">26层</option><option value="27">27层</option><option value="28">28层</option>'
     + '<option value="29">29层</option><option value="30">30层</option><option value="31">31层</option><option value="32">32层</option>'
     + '<option value="33">33层</option><option value="34">34层</option><option value="35">35层</option><option value="36">36层</option>'
     + '<option value="37">37层</option><option value="38">38层</option><option value="39">39层</option><option value="40">40层</option>';
    + "</select></li>";
    $("#hlUl").append(opt);
    sli = "<li>流速：" + data[0].CURRENTSPD1 + "</li><li>流向：" + data[0].CURRENTDIR1 + "</li>"
    + "<li ><ul class='liuxiangtu'><div id='liuxiangtu' ></ul></div></li>";

    $("#hlUl").append(sli);
    setLXT(data[0].CURRENTDIR1);
}
// 流向图
function setLXT(CURRENTDIR) {
    // 流向图
    var myChart = echarts.init(document.getElementById('liuxiangtu'));
    option = {
        backgroundColor: 'rgba(0,0,0,0)',
        // backgroundImage: '#1b1b1b',
        tooltip: {
            show: false,
            formatter: "{a}  : {c}°"
        },
        series: [
            {
                name: '流向',
                type: 'gauge',
                // center: ['50%', '40%'],    // 默认全局居中
                //radius: '58%',
                startAngle: 90,
                endAngle: -269.999,
                max: 360,
                detail: {
                    show: false,
                    formatter: '90'
                }, //仪表盘显示数据
                axisLine: { //仪表盘轴线样式
                    show: false,
                    lineStyle: {
                        width: 6,
                        show: false
                    }
                },
                splitNumber: 4,       // 分割段数，默认为5
                splitLine: {           // 分隔线
                    show: true,        // 默认显示，属性show控制显示与否,这里设为false将隐藏分割线！！
                    length: 12,         // 属性length控制线长
                    lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式
                        color: '#f02d00',
                        width: 0,
                        type: 'solid'
                    }
                },
                axisLine: {            // 坐标轴线
                    lineStyle: {       // 属性lineStyle控制线条样式
                        color: [[1, '#f02d00']],
                        width: 0
                    }
                },
                axisTick: {            // 坐标轴小标记
                    show: false,        // 属性show控制显示与否，默认不显示
                    splitNumber: 5,    // 每份split细分多少段
                    length: 8,         // 属性length控制线长
                    lineStyle: {       // 属性lineStyle控制线条样式
                        color: '#ffbd2c',
                        width: 1,
                        type: 'solid'
                    }
                },
                axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel
                    show: false,
                    formatter: function (v) {
                        switch (v + '') {
                            case '0': return '北';
                            case '90': return '东';
                            case '180': return '南';
                            case '270': return '西';
                            default: return '';
                        }
                    },
                    distance: -26,
                    textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                        // color: '#333'
                    }
                },
                pointer: {
                    length: '70%',
                    width: 4,
                    color: 'auto'
                },
                data: [{ value: CURRENTDIR, name: '' }]
            }
        ]
    };

    myChart.setOption(option);
}
// 风向风速
function setFXFS(data) {
    var sli = "";
    sli="<li></li><li>两分钟平均</li><li>十分钟平均</li><li>最大</li><li>极大</li><li>瞬时</li>"
        + "<li>风速</li><li>" + data.TOWMINAVESPD.toFixed(3) + "</li><li>" + data.TENMINAVESPD.toFixed(3) + "</li><li>" + data.MAXWINDSPD.toFixed(3) + "</li><li>" + data.HUGEWINDSPD.toFixed(3) + "</li><li>" + data.INSTANTSPD.toFixed(3) + "</li>";
    $("#fsfxUl1").append(sli);
    sli = "<li>风向</li><li><ul class='fengxiangtu'><div id='fengxiangtu1' style='height:60px;'></div></ul></li><li><ul class='fengxiangtu'><div id='fengxiangtu2' style='height:60px;'></div></ul></li><li><ul class='fengxiangtu'><div id='fengxiangtu3' style='height:60px;'></div></ul></li><li><ul class='fengxiangtu'><div id='fengxiangtu4' style='height:60px;'></div></ul></li><li><ul class='fengxiangtu'><div id='fengxiangtu5' style='height:60px;'></div></ul></li>";
    $("#fsfxUl1").append(sli);
    setFXT(data.TOWMINAVEDIR, 1);
    setFXT(data.TENMINAVEDIR, 2);
    setFXT(data.MAXWINDDIR, 3);
    setFXT(data.HUGEWINDDIR, 4);
    setFXT(data.INSTANTDIR, 5);
    sli = "<li>最大风速出现时间</li> <li>极大风速出现时间</li> <li>" + data.MAXWINDTIME + "</li><li>" + data.HUGEWINDTIME + "</li>";
    $("#fsfxUl2").append(sli);
}
// 风向图
function setFXT(WINDDIR,flg) {
    // 风向图
    var myChart = echarts.init(document.getElementById('fengxiangtu'+flg));
    option = {
        backgroundColor: 'rgba(0,0,0,0)',
        // backgroundImage: '#1b1b1b',
        tooltip: {
            show: false,
            formatter: "{a}  : {c}°"
        },
        series: [
            {
                name: '流向',
                type: 'gauge',
                // center: ['50%', '40%'],    // 默认全局居中
                //radius: '58%',
                startAngle: 90,
                endAngle: -269.999,
                max: 360,
                detail: {
                    show: false,
                    formatter: '90'
                }, //仪表盘显示数据
                axisLine: { //仪表盘轴线样式
                    show: false,
                    lineStyle: {
                        width: 6,
                        show: false
                    }
                },
                splitNumber: 4,       // 分割段数，默认为5
                splitLine: {           // 分隔线
                    show: true,        // 默认显示，属性show控制显示与否,这里设为false将隐藏分割线！！
                    length: 12,         // 属性length控制线长
                    lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式
                        color: '#f02d00',
                        width: 0,
                        type: 'solid'
                    }
                },
                axisLine: {            // 坐标轴线
                    lineStyle: {       // 属性lineStyle控制线条样式
                        color: [[1, '#f02d00']],
                        width: 0
                    }
                },
                axisTick: {            // 坐标轴小标记
                    show: false,        // 属性show控制显示与否，默认不显示
                    splitNumber: 5,    // 每份split细分多少段
                    length: 8,         // 属性length控制线长
                    lineStyle: {       // 属性lineStyle控制线条样式
                        color: '#ffbd2c',
                        width: 1,
                        type: 'solid'
                    }
                },
                axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel
                    show: false,
                    formatter: function (v) {
                        switch (v + '') {
                            case '0': return '北';
                            case '90': return '东';
                            case '180': return '南';
                            case '270': return '西';
                            default: return '';
                        }
                    },
                    distance: -26,
                    textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE
                        // color: '#333'
                    }
                },
                pointer: {
                    length: '70%',
                    width: 4,
                    color: 'auto'
                },
                data: [{ value: WINDDIR, name: '' }]
            }
        ]
    };

    myChart.setOption(option);
}